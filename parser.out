Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FOR
    THEN

Grammar

Rule 0     S' -> block
Rule 1     block -> LBRACE inblock RBRACE
Rule 2     inblock -> smt inblock
Rule 3     inblock -> smt
Rule 4     smt -> block
Rule 5     smt -> LBRACE RBRACE
Rule 6     block -> LBRACE RBRACE
Rule 7     smt -> NAME EQUALS expression SEMI
Rule 8     smt -> expression expression_index EQUALS expression SEMI
Rule 9     smt -> print_smt
Rule 10    smt -> if_smt
Rule 11    smt -> while_smt
Rule 12    smt -> if_else_smt
Rule 13    print_smt -> PRINT LPAREN expression RPAREN SEMI
Rule 14    if_smt -> IF LPAREN expression RPAREN block
Rule 15    if_else_smt -> IF LPAREN expression RPAREN block ELSE block
Rule 16    while_smt -> WHILE LPAREN expression RPAREN block
Rule 17    expression -> expression expression_index
Rule 18    expression_index -> LSQUAREPAREN expression RSQUAREPAREN
Rule 19    expression -> LSQUAREPAREN expression_head RSQUAREPAREN
Rule 20    expression_head -> expression
Rule 21    expression_head -> expression expression_tail
Rule 22    expression_tail -> DELIMITER expression expression_tail
Rule 23    expression_tail -> <empty>
Rule 24    expression_head -> <empty>
Rule 25    expression -> MINUS expression
Rule 26    expression -> expression PLUS expression
Rule 27    expression -> expression MINUS expression
Rule 28    expression -> expression TIMES expression
Rule 29    expression -> expression DIVIDE expression
Rule 30    expression -> expression FLOOR_DIVIDE expression
Rule 31    expression -> expression MODULUS expression
Rule 32    expression -> expression POWER expression
Rule 33    expression -> expression LESS_THAN expression
Rule 34    expression -> expression LESS_EQUAL expression
Rule 35    expression -> expression GREATER_THAN expression
Rule 36    expression -> expression GREATER_EQUAL expression
Rule 37    expression -> expression DOUBLE_EQUALS expression
Rule 38    expression -> expression IN expression
Rule 39    expression -> expression AND expression
Rule 40    expression -> expression OR expression
Rule 41    expression -> expression NOT_EQUAL expression
Rule 42    expression -> NOT expression
Rule 43    expression -> factor
Rule 44    factor -> NUMBER
Rule 45    expression -> STRING
Rule 46    expression -> smt
Rule 47    expression -> LPAREN expression RPAREN
Rule 48    expression -> NAME
Rule 49    expression -> TRUE
Rule 50    expression -> FALSE

Terminals, with rules where they appear

AND                  : 39
DELIMITER            : 22
DIVIDE               : 29
DOUBLE_EQUALS        : 37
ELSE                 : 15
EQUALS               : 7 8
FALSE                : 50
FLOOR_DIVIDE         : 30
FOR                  : 
GREATER_EQUAL        : 36
GREATER_THAN         : 35
IF                   : 14 15
IN                   : 38
LBRACE               : 1 5 6
LESS_EQUAL           : 34
LESS_THAN            : 33
LPAREN               : 13 14 15 16 47
LSQUAREPAREN         : 18 19
MINUS                : 25 27
MODULUS              : 31
NAME                 : 7 48
NOT                  : 42
NOT_EQUAL            : 41
NUMBER               : 44
OR                   : 40
PLUS                 : 26
POWER                : 32
PRINT                : 13
RBRACE               : 1 5 6
RPAREN               : 13 14 15 16 47
RSQUAREPAREN         : 18 19
SEMI                 : 7 8 13
STRING               : 45
THEN                 : 
TIMES                : 28
TRUE                 : 49
WHILE                : 16
error                : 

Nonterminals, with rules where they appear

block                : 4 14 15 15 16 0
expression           : 7 8 8 13 14 15 16 17 18 20 21 22 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 47
expression_head      : 19
expression_index     : 8 17
expression_tail      : 21 22
factor               : 43
if_else_smt          : 12
if_smt               : 10
inblock              : 1 2
print_smt            : 9
smt                  : 2 3 46
while_smt            : 11

Parsing method: LALR

state 0

    (0) S' -> . block
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 1

    block                          shift and go to state 2

state 1

    (1) block -> LBRACE . inblock RBRACE
    (6) block -> LBRACE . RBRACE
    (2) inblock -> . smt inblock
    (3) inblock -> . smt
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block
    (44) factor -> . NUMBER

    RBRACE          shift and go to state 13
    LBRACE          shift and go to state 12
    NAME            shift and go to state 4
    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16
    NUMBER          shift and go to state 21

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 15
    expression                     shift and go to state 17
    print_smt                      shift and go to state 5
    block                          shift and go to state 18
    inblock                        shift and go to state 19
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 2

    (0) S' -> block .



state 3

    (19) expression -> LSQUAREPAREN . expression_head RSQUAREPAREN
    (20) expression_head -> . expression
    (21) expression_head -> . expression expression_tail
    (24) expression_head -> .
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    RSQUAREPAREN    reduce using rule 24 (expression_head -> .)
    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    factor                         shift and go to state 9
    while_smt                      shift and go to state 23
    expression                     shift and go to state 29
    expression_head                shift and go to state 27
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    smt                            shift and go to state 28
    block                          shift and go to state 18
    if_smt                         shift and go to state 22

state 4

    (7) smt -> NAME . EQUALS expression SEMI
    (48) expression -> NAME .

    EQUALS          shift and go to state 30
    PLUS            reduce using rule 48 (expression -> NAME .)
    MINUS           reduce using rule 48 (expression -> NAME .)
    TIMES           reduce using rule 48 (expression -> NAME .)
    DIVIDE          reduce using rule 48 (expression -> NAME .)
    FLOOR_DIVIDE    reduce using rule 48 (expression -> NAME .)
    MODULUS         reduce using rule 48 (expression -> NAME .)
    POWER           reduce using rule 48 (expression -> NAME .)
    LESS_THAN       reduce using rule 48 (expression -> NAME .)
    LESS_EQUAL      reduce using rule 48 (expression -> NAME .)
    GREATER_THAN    reduce using rule 48 (expression -> NAME .)
    GREATER_EQUAL   reduce using rule 48 (expression -> NAME .)
    DOUBLE_EQUALS   reduce using rule 48 (expression -> NAME .)
    IN              reduce using rule 48 (expression -> NAME .)
    AND             reduce using rule 48 (expression -> NAME .)
    OR              reduce using rule 48 (expression -> NAME .)
    NOT_EQUAL       reduce using rule 48 (expression -> NAME .)
    LSQUAREPAREN    reduce using rule 48 (expression -> NAME .)


state 5

    (9) smt -> print_smt .

    PLUS            reduce using rule 9 (smt -> print_smt .)
    MINUS           reduce using rule 9 (smt -> print_smt .)
    TIMES           reduce using rule 9 (smt -> print_smt .)
    DIVIDE          reduce using rule 9 (smt -> print_smt .)
    FLOOR_DIVIDE    reduce using rule 9 (smt -> print_smt .)
    MODULUS         reduce using rule 9 (smt -> print_smt .)
    POWER           reduce using rule 9 (smt -> print_smt .)
    LESS_THAN       reduce using rule 9 (smt -> print_smt .)
    LESS_EQUAL      reduce using rule 9 (smt -> print_smt .)
    GREATER_THAN    reduce using rule 9 (smt -> print_smt .)
    GREATER_EQUAL   reduce using rule 9 (smt -> print_smt .)
    DOUBLE_EQUALS   reduce using rule 9 (smt -> print_smt .)
    IN              reduce using rule 9 (smt -> print_smt .)
    AND             reduce using rule 9 (smt -> print_smt .)
    OR              reduce using rule 9 (smt -> print_smt .)
    NOT_EQUAL       reduce using rule 9 (smt -> print_smt .)
    LSQUAREPAREN    reduce using rule 9 (smt -> print_smt .)
    DELIMITER       reduce using rule 9 (smt -> print_smt .)
    RSQUAREPAREN    reduce using rule 9 (smt -> print_smt .)
    RPAREN          reduce using rule 9 (smt -> print_smt .)
    SEMI            reduce using rule 9 (smt -> print_smt .)
    LBRACE          reduce using rule 9 (smt -> print_smt .)
    NAME            reduce using rule 9 (smt -> print_smt .)
    NOT             reduce using rule 9 (smt -> print_smt .)
    STRING          reduce using rule 9 (smt -> print_smt .)
    LPAREN          reduce using rule 9 (smt -> print_smt .)
    TRUE            reduce using rule 9 (smt -> print_smt .)
    FALSE           reduce using rule 9 (smt -> print_smt .)
    PRINT           reduce using rule 9 (smt -> print_smt .)
    IF              reduce using rule 9 (smt -> print_smt .)
    WHILE           reduce using rule 9 (smt -> print_smt .)
    NUMBER          reduce using rule 9 (smt -> print_smt .)
    RBRACE          reduce using rule 9 (smt -> print_smt .)


state 6

    (25) expression -> MINUS . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 31
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 7

    (50) expression -> FALSE .

    PLUS            reduce using rule 50 (expression -> FALSE .)
    MINUS           reduce using rule 50 (expression -> FALSE .)
    TIMES           reduce using rule 50 (expression -> FALSE .)
    DIVIDE          reduce using rule 50 (expression -> FALSE .)
    FLOOR_DIVIDE    reduce using rule 50 (expression -> FALSE .)
    MODULUS         reduce using rule 50 (expression -> FALSE .)
    POWER           reduce using rule 50 (expression -> FALSE .)
    LESS_THAN       reduce using rule 50 (expression -> FALSE .)
    LESS_EQUAL      reduce using rule 50 (expression -> FALSE .)
    GREATER_THAN    reduce using rule 50 (expression -> FALSE .)
    GREATER_EQUAL   reduce using rule 50 (expression -> FALSE .)
    DOUBLE_EQUALS   reduce using rule 50 (expression -> FALSE .)
    IN              reduce using rule 50 (expression -> FALSE .)
    AND             reduce using rule 50 (expression -> FALSE .)
    OR              reduce using rule 50 (expression -> FALSE .)
    NOT_EQUAL       reduce using rule 50 (expression -> FALSE .)
    LSQUAREPAREN    reduce using rule 50 (expression -> FALSE .)
    DELIMITER       reduce using rule 50 (expression -> FALSE .)
    RSQUAREPAREN    reduce using rule 50 (expression -> FALSE .)
    RPAREN          reduce using rule 50 (expression -> FALSE .)
    SEMI            reduce using rule 50 (expression -> FALSE .)


state 8

    (45) expression -> STRING .

    PLUS            reduce using rule 45 (expression -> STRING .)
    MINUS           reduce using rule 45 (expression -> STRING .)
    TIMES           reduce using rule 45 (expression -> STRING .)
    DIVIDE          reduce using rule 45 (expression -> STRING .)
    FLOOR_DIVIDE    reduce using rule 45 (expression -> STRING .)
    MODULUS         reduce using rule 45 (expression -> STRING .)
    POWER           reduce using rule 45 (expression -> STRING .)
    LESS_THAN       reduce using rule 45 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 45 (expression -> STRING .)
    GREATER_THAN    reduce using rule 45 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 45 (expression -> STRING .)
    DOUBLE_EQUALS   reduce using rule 45 (expression -> STRING .)
    IN              reduce using rule 45 (expression -> STRING .)
    AND             reduce using rule 45 (expression -> STRING .)
    OR              reduce using rule 45 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 45 (expression -> STRING .)
    LSQUAREPAREN    reduce using rule 45 (expression -> STRING .)
    DELIMITER       reduce using rule 45 (expression -> STRING .)
    RSQUAREPAREN    reduce using rule 45 (expression -> STRING .)
    RPAREN          reduce using rule 45 (expression -> STRING .)
    SEMI            reduce using rule 45 (expression -> STRING .)


state 9

    (43) expression -> factor .

    PLUS            reduce using rule 43 (expression -> factor .)
    MINUS           reduce using rule 43 (expression -> factor .)
    TIMES           reduce using rule 43 (expression -> factor .)
    DIVIDE          reduce using rule 43 (expression -> factor .)
    FLOOR_DIVIDE    reduce using rule 43 (expression -> factor .)
    MODULUS         reduce using rule 43 (expression -> factor .)
    POWER           reduce using rule 43 (expression -> factor .)
    LESS_THAN       reduce using rule 43 (expression -> factor .)
    LESS_EQUAL      reduce using rule 43 (expression -> factor .)
    GREATER_THAN    reduce using rule 43 (expression -> factor .)
    GREATER_EQUAL   reduce using rule 43 (expression -> factor .)
    DOUBLE_EQUALS   reduce using rule 43 (expression -> factor .)
    IN              reduce using rule 43 (expression -> factor .)
    AND             reduce using rule 43 (expression -> factor .)
    OR              reduce using rule 43 (expression -> factor .)
    NOT_EQUAL       reduce using rule 43 (expression -> factor .)
    LSQUAREPAREN    reduce using rule 43 (expression -> factor .)
    DELIMITER       reduce using rule 43 (expression -> factor .)
    RSQUAREPAREN    reduce using rule 43 (expression -> factor .)
    RPAREN          reduce using rule 43 (expression -> factor .)
    SEMI            reduce using rule 43 (expression -> factor .)


state 10

    (14) if_smt -> IF . LPAREN expression RPAREN block
    (15) if_else_smt -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 32


state 11

    (47) expression -> LPAREN . expression RPAREN
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 33
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 12

    (5) smt -> LBRACE . RBRACE
    (1) block -> LBRACE . inblock RBRACE
    (6) block -> LBRACE . RBRACE
    (2) inblock -> . smt inblock
    (3) inblock -> . smt
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block
    (44) factor -> . NUMBER

    RBRACE          shift and go to state 34
    LBRACE          shift and go to state 12
    NAME            shift and go to state 4
    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16
    NUMBER          shift and go to state 21

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 15
    expression                     shift and go to state 17
    print_smt                      shift and go to state 5
    block                          shift and go to state 18
    inblock                        shift and go to state 19
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 13

    (6) block -> LBRACE RBRACE .

    LBRACE          reduce using rule 6 (block -> LBRACE RBRACE .)
    NAME            reduce using rule 6 (block -> LBRACE RBRACE .)
    LSQUAREPAREN    reduce using rule 6 (block -> LBRACE RBRACE .)
    MINUS           reduce using rule 6 (block -> LBRACE RBRACE .)
    NOT             reduce using rule 6 (block -> LBRACE RBRACE .)
    STRING          reduce using rule 6 (block -> LBRACE RBRACE .)
    LPAREN          reduce using rule 6 (block -> LBRACE RBRACE .)
    TRUE            reduce using rule 6 (block -> LBRACE RBRACE .)
    FALSE           reduce using rule 6 (block -> LBRACE RBRACE .)
    PRINT           reduce using rule 6 (block -> LBRACE RBRACE .)
    IF              reduce using rule 6 (block -> LBRACE RBRACE .)
    WHILE           reduce using rule 6 (block -> LBRACE RBRACE .)
    NUMBER          reduce using rule 6 (block -> LBRACE RBRACE .)
    RBRACE          reduce using rule 6 (block -> LBRACE RBRACE .)
    PLUS            reduce using rule 6 (block -> LBRACE RBRACE .)
    TIMES           reduce using rule 6 (block -> LBRACE RBRACE .)
    DIVIDE          reduce using rule 6 (block -> LBRACE RBRACE .)
    FLOOR_DIVIDE    reduce using rule 6 (block -> LBRACE RBRACE .)
    MODULUS         reduce using rule 6 (block -> LBRACE RBRACE .)
    POWER           reduce using rule 6 (block -> LBRACE RBRACE .)
    LESS_THAN       reduce using rule 6 (block -> LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 6 (block -> LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 6 (block -> LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 6 (block -> LBRACE RBRACE .)
    DOUBLE_EQUALS   reduce using rule 6 (block -> LBRACE RBRACE .)
    IN              reduce using rule 6 (block -> LBRACE RBRACE .)
    AND             reduce using rule 6 (block -> LBRACE RBRACE .)
    OR              reduce using rule 6 (block -> LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 6 (block -> LBRACE RBRACE .)
    DELIMITER       reduce using rule 6 (block -> LBRACE RBRACE .)
    RSQUAREPAREN    reduce using rule 6 (block -> LBRACE RBRACE .)
    RPAREN          reduce using rule 6 (block -> LBRACE RBRACE .)
    SEMI            reduce using rule 6 (block -> LBRACE RBRACE .)
    $end            reduce using rule 6 (block -> LBRACE RBRACE .)
    ELSE            reduce using rule 6 (block -> LBRACE RBRACE .)


state 14

    (13) print_smt -> PRINT . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 35


state 15

    (2) inblock -> smt . inblock
    (3) inblock -> smt .
    (46) expression -> smt .
    (2) inblock -> . smt inblock
    (3) inblock -> . smt
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block
    (44) factor -> . NUMBER

  ! shift/reduce conflict for LSQUAREPAREN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    RBRACE          reduce using rule 3 (inblock -> smt .)
    PLUS            reduce using rule 46 (expression -> smt .)
    TIMES           reduce using rule 46 (expression -> smt .)
    DIVIDE          reduce using rule 46 (expression -> smt .)
    FLOOR_DIVIDE    reduce using rule 46 (expression -> smt .)
    MODULUS         reduce using rule 46 (expression -> smt .)
    POWER           reduce using rule 46 (expression -> smt .)
    LESS_THAN       reduce using rule 46 (expression -> smt .)
    LESS_EQUAL      reduce using rule 46 (expression -> smt .)
    GREATER_THAN    reduce using rule 46 (expression -> smt .)
    GREATER_EQUAL   reduce using rule 46 (expression -> smt .)
    DOUBLE_EQUALS   reduce using rule 46 (expression -> smt .)
    IN              reduce using rule 46 (expression -> smt .)
    AND             reduce using rule 46 (expression -> smt .)
    OR              reduce using rule 46 (expression -> smt .)
    NOT_EQUAL       reduce using rule 46 (expression -> smt .)
    LBRACE          shift and go to state 12
    NAME            shift and go to state 4
    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16
    NUMBER          shift and go to state 21

  ! MINUS           [ reduce using rule 46 (expression -> smt .) ]
  ! LSQUAREPAREN    [ reduce using rule 46 (expression -> smt .) ]

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 15
    expression                     shift and go to state 17
    print_smt                      shift and go to state 5
    block                          shift and go to state 18
    inblock                        shift and go to state 36
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 16

    (16) while_smt -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 37


state 17

    (8) smt -> expression . expression_index EQUALS expression SEMI
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    AND             shift and go to state 54
    OR              shift and go to state 41
    NOT_EQUAL       shift and go to state 55
    LSQUAREPAREN    shift and go to state 38

    expression_index               shift and go to state 47

state 18

    (4) smt -> block .

    PLUS            reduce using rule 4 (smt -> block .)
    MINUS           reduce using rule 4 (smt -> block .)
    TIMES           reduce using rule 4 (smt -> block .)
    DIVIDE          reduce using rule 4 (smt -> block .)
    FLOOR_DIVIDE    reduce using rule 4 (smt -> block .)
    MODULUS         reduce using rule 4 (smt -> block .)
    POWER           reduce using rule 4 (smt -> block .)
    LESS_THAN       reduce using rule 4 (smt -> block .)
    LESS_EQUAL      reduce using rule 4 (smt -> block .)
    GREATER_THAN    reduce using rule 4 (smt -> block .)
    GREATER_EQUAL   reduce using rule 4 (smt -> block .)
    DOUBLE_EQUALS   reduce using rule 4 (smt -> block .)
    IN              reduce using rule 4 (smt -> block .)
    AND             reduce using rule 4 (smt -> block .)
    OR              reduce using rule 4 (smt -> block .)
    NOT_EQUAL       reduce using rule 4 (smt -> block .)
    LSQUAREPAREN    reduce using rule 4 (smt -> block .)
    DELIMITER       reduce using rule 4 (smt -> block .)
    RSQUAREPAREN    reduce using rule 4 (smt -> block .)
    RPAREN          reduce using rule 4 (smt -> block .)
    SEMI            reduce using rule 4 (smt -> block .)
    LBRACE          reduce using rule 4 (smt -> block .)
    NAME            reduce using rule 4 (smt -> block .)
    NOT             reduce using rule 4 (smt -> block .)
    STRING          reduce using rule 4 (smt -> block .)
    LPAREN          reduce using rule 4 (smt -> block .)
    TRUE            reduce using rule 4 (smt -> block .)
    FALSE           reduce using rule 4 (smt -> block .)
    PRINT           reduce using rule 4 (smt -> block .)
    IF              reduce using rule 4 (smt -> block .)
    WHILE           reduce using rule 4 (smt -> block .)
    NUMBER          reduce using rule 4 (smt -> block .)
    RBRACE          reduce using rule 4 (smt -> block .)


state 19

    (1) block -> LBRACE inblock . RBRACE

    RBRACE          shift and go to state 56


state 20

    (12) smt -> if_else_smt .

    PLUS            reduce using rule 12 (smt -> if_else_smt .)
    MINUS           reduce using rule 12 (smt -> if_else_smt .)
    TIMES           reduce using rule 12 (smt -> if_else_smt .)
    DIVIDE          reduce using rule 12 (smt -> if_else_smt .)
    FLOOR_DIVIDE    reduce using rule 12 (smt -> if_else_smt .)
    MODULUS         reduce using rule 12 (smt -> if_else_smt .)
    POWER           reduce using rule 12 (smt -> if_else_smt .)
    LESS_THAN       reduce using rule 12 (smt -> if_else_smt .)
    LESS_EQUAL      reduce using rule 12 (smt -> if_else_smt .)
    GREATER_THAN    reduce using rule 12 (smt -> if_else_smt .)
    GREATER_EQUAL   reduce using rule 12 (smt -> if_else_smt .)
    DOUBLE_EQUALS   reduce using rule 12 (smt -> if_else_smt .)
    IN              reduce using rule 12 (smt -> if_else_smt .)
    AND             reduce using rule 12 (smt -> if_else_smt .)
    OR              reduce using rule 12 (smt -> if_else_smt .)
    NOT_EQUAL       reduce using rule 12 (smt -> if_else_smt .)
    LSQUAREPAREN    reduce using rule 12 (smt -> if_else_smt .)
    DELIMITER       reduce using rule 12 (smt -> if_else_smt .)
    RSQUAREPAREN    reduce using rule 12 (smt -> if_else_smt .)
    RPAREN          reduce using rule 12 (smt -> if_else_smt .)
    SEMI            reduce using rule 12 (smt -> if_else_smt .)
    LBRACE          reduce using rule 12 (smt -> if_else_smt .)
    NAME            reduce using rule 12 (smt -> if_else_smt .)
    NOT             reduce using rule 12 (smt -> if_else_smt .)
    STRING          reduce using rule 12 (smt -> if_else_smt .)
    LPAREN          reduce using rule 12 (smt -> if_else_smt .)
    TRUE            reduce using rule 12 (smt -> if_else_smt .)
    FALSE           reduce using rule 12 (smt -> if_else_smt .)
    PRINT           reduce using rule 12 (smt -> if_else_smt .)
    IF              reduce using rule 12 (smt -> if_else_smt .)
    WHILE           reduce using rule 12 (smt -> if_else_smt .)
    NUMBER          reduce using rule 12 (smt -> if_else_smt .)
    RBRACE          reduce using rule 12 (smt -> if_else_smt .)


state 21

    (44) factor -> NUMBER .

    SEMI            reduce using rule 44 (factor -> NUMBER .)
    PLUS            reduce using rule 44 (factor -> NUMBER .)
    MINUS           reduce using rule 44 (factor -> NUMBER .)
    TIMES           reduce using rule 44 (factor -> NUMBER .)
    DIVIDE          reduce using rule 44 (factor -> NUMBER .)
    FLOOR_DIVIDE    reduce using rule 44 (factor -> NUMBER .)
    MODULUS         reduce using rule 44 (factor -> NUMBER .)
    POWER           reduce using rule 44 (factor -> NUMBER .)
    LESS_THAN       reduce using rule 44 (factor -> NUMBER .)
    LESS_EQUAL      reduce using rule 44 (factor -> NUMBER .)
    GREATER_THAN    reduce using rule 44 (factor -> NUMBER .)
    GREATER_EQUAL   reduce using rule 44 (factor -> NUMBER .)
    DOUBLE_EQUALS   reduce using rule 44 (factor -> NUMBER .)
    IN              reduce using rule 44 (factor -> NUMBER .)
    AND             reduce using rule 44 (factor -> NUMBER .)
    OR              reduce using rule 44 (factor -> NUMBER .)
    NOT_EQUAL       reduce using rule 44 (factor -> NUMBER .)
    LSQUAREPAREN    reduce using rule 44 (factor -> NUMBER .)
    DELIMITER       reduce using rule 44 (factor -> NUMBER .)
    RSQUAREPAREN    reduce using rule 44 (factor -> NUMBER .)
    RPAREN          reduce using rule 44 (factor -> NUMBER .)


state 22

    (10) smt -> if_smt .

    PLUS            reduce using rule 10 (smt -> if_smt .)
    MINUS           reduce using rule 10 (smt -> if_smt .)
    TIMES           reduce using rule 10 (smt -> if_smt .)
    DIVIDE          reduce using rule 10 (smt -> if_smt .)
    FLOOR_DIVIDE    reduce using rule 10 (smt -> if_smt .)
    MODULUS         reduce using rule 10 (smt -> if_smt .)
    POWER           reduce using rule 10 (smt -> if_smt .)
    LESS_THAN       reduce using rule 10 (smt -> if_smt .)
    LESS_EQUAL      reduce using rule 10 (smt -> if_smt .)
    GREATER_THAN    reduce using rule 10 (smt -> if_smt .)
    GREATER_EQUAL   reduce using rule 10 (smt -> if_smt .)
    DOUBLE_EQUALS   reduce using rule 10 (smt -> if_smt .)
    IN              reduce using rule 10 (smt -> if_smt .)
    AND             reduce using rule 10 (smt -> if_smt .)
    OR              reduce using rule 10 (smt -> if_smt .)
    NOT_EQUAL       reduce using rule 10 (smt -> if_smt .)
    LSQUAREPAREN    reduce using rule 10 (smt -> if_smt .)
    DELIMITER       reduce using rule 10 (smt -> if_smt .)
    RSQUAREPAREN    reduce using rule 10 (smt -> if_smt .)
    RPAREN          reduce using rule 10 (smt -> if_smt .)
    SEMI            reduce using rule 10 (smt -> if_smt .)
    LBRACE          reduce using rule 10 (smt -> if_smt .)
    NAME            reduce using rule 10 (smt -> if_smt .)
    NOT             reduce using rule 10 (smt -> if_smt .)
    STRING          reduce using rule 10 (smt -> if_smt .)
    LPAREN          reduce using rule 10 (smt -> if_smt .)
    TRUE            reduce using rule 10 (smt -> if_smt .)
    FALSE           reduce using rule 10 (smt -> if_smt .)
    PRINT           reduce using rule 10 (smt -> if_smt .)
    IF              reduce using rule 10 (smt -> if_smt .)
    WHILE           reduce using rule 10 (smt -> if_smt .)
    NUMBER          reduce using rule 10 (smt -> if_smt .)
    RBRACE          reduce using rule 10 (smt -> if_smt .)


state 23

    (11) smt -> while_smt .

    PLUS            reduce using rule 11 (smt -> while_smt .)
    MINUS           reduce using rule 11 (smt -> while_smt .)
    TIMES           reduce using rule 11 (smt -> while_smt .)
    DIVIDE          reduce using rule 11 (smt -> while_smt .)
    FLOOR_DIVIDE    reduce using rule 11 (smt -> while_smt .)
    MODULUS         reduce using rule 11 (smt -> while_smt .)
    POWER           reduce using rule 11 (smt -> while_smt .)
    LESS_THAN       reduce using rule 11 (smt -> while_smt .)
    LESS_EQUAL      reduce using rule 11 (smt -> while_smt .)
    GREATER_THAN    reduce using rule 11 (smt -> while_smt .)
    GREATER_EQUAL   reduce using rule 11 (smt -> while_smt .)
    DOUBLE_EQUALS   reduce using rule 11 (smt -> while_smt .)
    IN              reduce using rule 11 (smt -> while_smt .)
    AND             reduce using rule 11 (smt -> while_smt .)
    OR              reduce using rule 11 (smt -> while_smt .)
    NOT_EQUAL       reduce using rule 11 (smt -> while_smt .)
    LSQUAREPAREN    reduce using rule 11 (smt -> while_smt .)
    DELIMITER       reduce using rule 11 (smt -> while_smt .)
    RSQUAREPAREN    reduce using rule 11 (smt -> while_smt .)
    RPAREN          reduce using rule 11 (smt -> while_smt .)
    SEMI            reduce using rule 11 (smt -> while_smt .)
    LBRACE          reduce using rule 11 (smt -> while_smt .)
    NAME            reduce using rule 11 (smt -> while_smt .)
    NOT             reduce using rule 11 (smt -> while_smt .)
    STRING          reduce using rule 11 (smt -> while_smt .)
    LPAREN          reduce using rule 11 (smt -> while_smt .)
    TRUE            reduce using rule 11 (smt -> while_smt .)
    FALSE           reduce using rule 11 (smt -> while_smt .)
    PRINT           reduce using rule 11 (smt -> while_smt .)
    IF              reduce using rule 11 (smt -> while_smt .)
    WHILE           reduce using rule 11 (smt -> while_smt .)
    NUMBER          reduce using rule 11 (smt -> while_smt .)
    RBRACE          reduce using rule 11 (smt -> while_smt .)


state 24

    (49) expression -> TRUE .

    PLUS            reduce using rule 49 (expression -> TRUE .)
    MINUS           reduce using rule 49 (expression -> TRUE .)
    TIMES           reduce using rule 49 (expression -> TRUE .)
    DIVIDE          reduce using rule 49 (expression -> TRUE .)
    FLOOR_DIVIDE    reduce using rule 49 (expression -> TRUE .)
    MODULUS         reduce using rule 49 (expression -> TRUE .)
    POWER           reduce using rule 49 (expression -> TRUE .)
    LESS_THAN       reduce using rule 49 (expression -> TRUE .)
    LESS_EQUAL      reduce using rule 49 (expression -> TRUE .)
    GREATER_THAN    reduce using rule 49 (expression -> TRUE .)
    GREATER_EQUAL   reduce using rule 49 (expression -> TRUE .)
    DOUBLE_EQUALS   reduce using rule 49 (expression -> TRUE .)
    IN              reduce using rule 49 (expression -> TRUE .)
    AND             reduce using rule 49 (expression -> TRUE .)
    OR              reduce using rule 49 (expression -> TRUE .)
    NOT_EQUAL       reduce using rule 49 (expression -> TRUE .)
    LSQUAREPAREN    reduce using rule 49 (expression -> TRUE .)
    DELIMITER       reduce using rule 49 (expression -> TRUE .)
    RSQUAREPAREN    reduce using rule 49 (expression -> TRUE .)
    RPAREN          reduce using rule 49 (expression -> TRUE .)
    SEMI            reduce using rule 49 (expression -> TRUE .)


state 25

    (42) expression -> NOT . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 57
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 26

    (48) expression -> NAME .
    (7) smt -> NAME . EQUALS expression SEMI

    PLUS            reduce using rule 48 (expression -> NAME .)
    MINUS           reduce using rule 48 (expression -> NAME .)
    TIMES           reduce using rule 48 (expression -> NAME .)
    DIVIDE          reduce using rule 48 (expression -> NAME .)
    FLOOR_DIVIDE    reduce using rule 48 (expression -> NAME .)
    MODULUS         reduce using rule 48 (expression -> NAME .)
    POWER           reduce using rule 48 (expression -> NAME .)
    LESS_THAN       reduce using rule 48 (expression -> NAME .)
    LESS_EQUAL      reduce using rule 48 (expression -> NAME .)
    GREATER_THAN    reduce using rule 48 (expression -> NAME .)
    GREATER_EQUAL   reduce using rule 48 (expression -> NAME .)
    DOUBLE_EQUALS   reduce using rule 48 (expression -> NAME .)
    IN              reduce using rule 48 (expression -> NAME .)
    AND             reduce using rule 48 (expression -> NAME .)
    OR              reduce using rule 48 (expression -> NAME .)
    NOT_EQUAL       reduce using rule 48 (expression -> NAME .)
    LSQUAREPAREN    reduce using rule 48 (expression -> NAME .)
    DELIMITER       reduce using rule 48 (expression -> NAME .)
    RSQUAREPAREN    reduce using rule 48 (expression -> NAME .)
    RPAREN          reduce using rule 48 (expression -> NAME .)
    SEMI            reduce using rule 48 (expression -> NAME .)
    EQUALS          shift and go to state 30


state 27

    (19) expression -> LSQUAREPAREN expression_head . RSQUAREPAREN

    RSQUAREPAREN    shift and go to state 58


state 28

    (46) expression -> smt .

    PLUS            reduce using rule 46 (expression -> smt .)
    MINUS           reduce using rule 46 (expression -> smt .)
    TIMES           reduce using rule 46 (expression -> smt .)
    DIVIDE          reduce using rule 46 (expression -> smt .)
    FLOOR_DIVIDE    reduce using rule 46 (expression -> smt .)
    MODULUS         reduce using rule 46 (expression -> smt .)
    POWER           reduce using rule 46 (expression -> smt .)
    LESS_THAN       reduce using rule 46 (expression -> smt .)
    LESS_EQUAL      reduce using rule 46 (expression -> smt .)
    GREATER_THAN    reduce using rule 46 (expression -> smt .)
    GREATER_EQUAL   reduce using rule 46 (expression -> smt .)
    DOUBLE_EQUALS   reduce using rule 46 (expression -> smt .)
    IN              reduce using rule 46 (expression -> smt .)
    AND             reduce using rule 46 (expression -> smt .)
    OR              reduce using rule 46 (expression -> smt .)
    NOT_EQUAL       reduce using rule 46 (expression -> smt .)
    LSQUAREPAREN    reduce using rule 46 (expression -> smt .)
    DELIMITER       reduce using rule 46 (expression -> smt .)
    RSQUAREPAREN    reduce using rule 46 (expression -> smt .)
    RPAREN          reduce using rule 46 (expression -> smt .)
    SEMI            reduce using rule 46 (expression -> smt .)


state 29

    (20) expression_head -> expression .
    (21) expression_head -> expression . expression_tail
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (22) expression_tail -> . DELIMITER expression expression_tail
    (23) expression_tail -> .
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

  ! reduce/reduce conflict for RSQUAREPAREN resolved using rule 20 (expression_head -> expression .)
    RSQUAREPAREN    reduce using rule 20 (expression_head -> expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    AND             shift and go to state 54
    OR              shift and go to state 41
    NOT_EQUAL       shift and go to state 55
    DELIMITER       shift and go to state 59
    LSQUAREPAREN    shift and go to state 38

  ! RSQUAREPAREN    [ reduce using rule 23 (expression_tail -> .) ]

    expression_tail                shift and go to state 61
    expression_index               shift and go to state 60

state 30

    (7) smt -> NAME EQUALS . expression SEMI
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 62
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 31

    (25) expression -> MINUS expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    PLUS            reduce using rule 25 (expression -> MINUS expression .)
    MINUS           reduce using rule 25 (expression -> MINUS expression .)
    TIMES           reduce using rule 25 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 25 (expression -> MINUS expression .)
    FLOOR_DIVIDE    reduce using rule 25 (expression -> MINUS expression .)
    MODULUS         reduce using rule 25 (expression -> MINUS expression .)
    POWER           reduce using rule 25 (expression -> MINUS expression .)
    LESS_THAN       reduce using rule 25 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 25 (expression -> MINUS expression .)
    GREATER_THAN    reduce using rule 25 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 25 (expression -> MINUS expression .)
    DOUBLE_EQUALS   reduce using rule 25 (expression -> MINUS expression .)
    IN              reduce using rule 25 (expression -> MINUS expression .)
    AND             reduce using rule 25 (expression -> MINUS expression .)
    OR              reduce using rule 25 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 25 (expression -> MINUS expression .)
    DELIMITER       reduce using rule 25 (expression -> MINUS expression .)
    RSQUAREPAREN    reduce using rule 25 (expression -> MINUS expression .)
    RPAREN          reduce using rule 25 (expression -> MINUS expression .)
    SEMI            reduce using rule 25 (expression -> MINUS expression .)
    LSQUAREPAREN    shift and go to state 38

  ! LSQUAREPAREN    [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! FLOOR_DIVIDE    [ shift and go to state 51 ]
  ! MODULUS         [ shift and go to state 52 ]
  ! POWER           [ shift and go to state 53 ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! IN              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 32

    (14) if_smt -> IF LPAREN . expression RPAREN block
    (15) if_else_smt -> IF LPAREN . expression RPAREN block ELSE block
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 63
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 33

    (47) expression -> LPAREN expression . RPAREN
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    RPAREN          shift and go to state 64
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    AND             shift and go to state 54
    OR              shift and go to state 41
    NOT_EQUAL       shift and go to state 55
    LSQUAREPAREN    shift and go to state 38

    expression_index               shift and go to state 60

state 34

    (5) smt -> LBRACE RBRACE .
    (6) block -> LBRACE RBRACE .

  ! reduce/reduce conflict for RPAREN resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for PLUS resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for MINUS resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for TIMES resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for FLOOR_DIVIDE resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for MODULUS resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for POWER resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for IN resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for AND resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for OR resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for LSQUAREPAREN resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for DELIMITER resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for RSQUAREPAREN resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for SEMI resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for LBRACE resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for NAME resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for NOT resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for STRING resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for TRUE resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for FALSE resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for PRINT resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for IF resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 5 (smt -> LBRACE RBRACE .)
  ! reduce/reduce conflict for RBRACE resolved using rule 5 (smt -> LBRACE RBRACE .)
    PLUS            reduce using rule 5 (smt -> LBRACE RBRACE .)
    MINUS           reduce using rule 5 (smt -> LBRACE RBRACE .)
    TIMES           reduce using rule 5 (smt -> LBRACE RBRACE .)
    DIVIDE          reduce using rule 5 (smt -> LBRACE RBRACE .)
    FLOOR_DIVIDE    reduce using rule 5 (smt -> LBRACE RBRACE .)
    MODULUS         reduce using rule 5 (smt -> LBRACE RBRACE .)
    POWER           reduce using rule 5 (smt -> LBRACE RBRACE .)
    LESS_THAN       reduce using rule 5 (smt -> LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 5 (smt -> LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 5 (smt -> LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 5 (smt -> LBRACE RBRACE .)
    DOUBLE_EQUALS   reduce using rule 5 (smt -> LBRACE RBRACE .)
    IN              reduce using rule 5 (smt -> LBRACE RBRACE .)
    AND             reduce using rule 5 (smt -> LBRACE RBRACE .)
    OR              reduce using rule 5 (smt -> LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 5 (smt -> LBRACE RBRACE .)
    LSQUAREPAREN    reduce using rule 5 (smt -> LBRACE RBRACE .)
    DELIMITER       reduce using rule 5 (smt -> LBRACE RBRACE .)
    RSQUAREPAREN    reduce using rule 5 (smt -> LBRACE RBRACE .)
    RPAREN          reduce using rule 5 (smt -> LBRACE RBRACE .)
    SEMI            reduce using rule 5 (smt -> LBRACE RBRACE .)
    LBRACE          reduce using rule 5 (smt -> LBRACE RBRACE .)
    NAME            reduce using rule 5 (smt -> LBRACE RBRACE .)
    NOT             reduce using rule 5 (smt -> LBRACE RBRACE .)
    STRING          reduce using rule 5 (smt -> LBRACE RBRACE .)
    LPAREN          reduce using rule 5 (smt -> LBRACE RBRACE .)
    TRUE            reduce using rule 5 (smt -> LBRACE RBRACE .)
    FALSE           reduce using rule 5 (smt -> LBRACE RBRACE .)
    PRINT           reduce using rule 5 (smt -> LBRACE RBRACE .)
    IF              reduce using rule 5 (smt -> LBRACE RBRACE .)
    WHILE           reduce using rule 5 (smt -> LBRACE RBRACE .)
    NUMBER          reduce using rule 5 (smt -> LBRACE RBRACE .)
    RBRACE          reduce using rule 5 (smt -> LBRACE RBRACE .)

  ! RPAREN          [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! PLUS            [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! MINUS           [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! TIMES           [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! DIVIDE          [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! MODULUS         [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! POWER           [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! LESS_THAN       [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! LESS_EQUAL      [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! GREATER_THAN    [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! GREATER_EQUAL   [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! IN              [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! AND             [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! OR              [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! NOT_EQUAL       [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! LSQUAREPAREN    [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! DELIMITER       [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! RSQUAREPAREN    [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! SEMI            [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! LBRACE          [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! NAME            [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! NOT             [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! STRING          [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! LPAREN          [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! TRUE            [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! FALSE           [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! PRINT           [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! IF              [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! WHILE           [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! NUMBER          [ reduce using rule 6 (block -> LBRACE RBRACE .) ]
  ! RBRACE          [ reduce using rule 6 (block -> LBRACE RBRACE .) ]


state 35

    (13) print_smt -> PRINT LPAREN . expression RPAREN SEMI
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 65
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 36

    (2) inblock -> smt inblock .

    RBRACE          reduce using rule 2 (inblock -> smt inblock .)


state 37

    (16) while_smt -> WHILE LPAREN . expression RPAREN block
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 66
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 38

    (18) expression_index -> LSQUAREPAREN . expression RSQUAREPAREN
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 67
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 39

    (27) expression -> expression MINUS . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 68
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 40

    (36) expression -> expression GREATER_EQUAL . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 69
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 41

    (40) expression -> expression OR . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 70
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 42

    (35) expression -> expression GREATER_THAN . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 71
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 43

    (37) expression -> expression DOUBLE_EQUALS . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 72
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 44

    (38) expression -> expression IN . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 73
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 45

    (28) expression -> expression TIMES . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 74
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 46

    (34) expression -> expression LESS_EQUAL . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 75
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 47

    (8) smt -> expression expression_index . EQUALS expression SEMI
    (17) expression -> expression expression_index .

    EQUALS          shift and go to state 76
    PLUS            reduce using rule 17 (expression -> expression expression_index .)
    MINUS           reduce using rule 17 (expression -> expression expression_index .)
    TIMES           reduce using rule 17 (expression -> expression expression_index .)
    DIVIDE          reduce using rule 17 (expression -> expression expression_index .)
    FLOOR_DIVIDE    reduce using rule 17 (expression -> expression expression_index .)
    MODULUS         reduce using rule 17 (expression -> expression expression_index .)
    POWER           reduce using rule 17 (expression -> expression expression_index .)
    LESS_THAN       reduce using rule 17 (expression -> expression expression_index .)
    LESS_EQUAL      reduce using rule 17 (expression -> expression expression_index .)
    GREATER_THAN    reduce using rule 17 (expression -> expression expression_index .)
    GREATER_EQUAL   reduce using rule 17 (expression -> expression expression_index .)
    DOUBLE_EQUALS   reduce using rule 17 (expression -> expression expression_index .)
    IN              reduce using rule 17 (expression -> expression expression_index .)
    AND             reduce using rule 17 (expression -> expression expression_index .)
    OR              reduce using rule 17 (expression -> expression expression_index .)
    NOT_EQUAL       reduce using rule 17 (expression -> expression expression_index .)
    LSQUAREPAREN    reduce using rule 17 (expression -> expression expression_index .)


state 48

    (29) expression -> expression DIVIDE . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 77
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 49

    (26) expression -> expression PLUS . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 78
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 50

    (33) expression -> expression LESS_THAN . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 79
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 51

    (30) expression -> expression FLOOR_DIVIDE . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 80
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 52

    (31) expression -> expression MODULUS . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 81
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 53

    (32) expression -> expression POWER . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 82
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 54

    (39) expression -> expression AND . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 83
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 55

    (41) expression -> expression NOT_EQUAL . expression
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 84
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 56

    (1) block -> LBRACE inblock RBRACE .

    RPAREN          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    PLUS            reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    MINUS           reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    TIMES           reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    DIVIDE          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    FLOOR_DIVIDE    reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    MODULUS         reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    POWER           reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    LESS_THAN       reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    LESS_EQUAL      reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    GREATER_THAN    reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    GREATER_EQUAL   reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    DOUBLE_EQUALS   reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    IN              reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    AND             reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    OR              reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    NOT_EQUAL       reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    LSQUAREPAREN    reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    DELIMITER       reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    RSQUAREPAREN    reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    SEMI            reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    LBRACE          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    NAME            reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    NOT             reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    STRING          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    LPAREN          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    TRUE            reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    FALSE           reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    PRINT           reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    IF              reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    WHILE           reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    NUMBER          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    RBRACE          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    $end            reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    ELSE            reduce using rule 1 (block -> LBRACE inblock RBRACE .)


state 57

    (42) expression -> NOT expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    AND             reduce using rule 42 (expression -> NOT expression .)
    OR              reduce using rule 42 (expression -> NOT expression .)
    DELIMITER       reduce using rule 42 (expression -> NOT expression .)
    RSQUAREPAREN    reduce using rule 42 (expression -> NOT expression .)
    RPAREN          reduce using rule 42 (expression -> NOT expression .)
    SEMI            reduce using rule 42 (expression -> NOT expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    NOT_EQUAL       shift and go to state 55
    LSQUAREPAREN    shift and go to state 38

  ! PLUS            [ reduce using rule 42 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> NOT expression .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 42 (expression -> NOT expression .) ]
  ! MODULUS         [ reduce using rule 42 (expression -> NOT expression .) ]
  ! POWER           [ reduce using rule 42 (expression -> NOT expression .) ]
  ! LESS_THAN       [ reduce using rule 42 (expression -> NOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 42 (expression -> NOT expression .) ]
  ! GREATER_THAN    [ reduce using rule 42 (expression -> NOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 42 (expression -> NOT expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 42 (expression -> NOT expression .) ]
  ! IN              [ reduce using rule 42 (expression -> NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 42 (expression -> NOT expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 42 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]

    expression_index               shift and go to state 60

state 58

    (19) expression -> LSQUAREPAREN expression_head RSQUAREPAREN .

    PLUS            reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    MINUS           reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    TIMES           reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    DIVIDE          reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    FLOOR_DIVIDE    reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    MODULUS         reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    POWER           reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    LESS_THAN       reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    LESS_EQUAL      reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    GREATER_THAN    reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    GREATER_EQUAL   reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    DOUBLE_EQUALS   reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    IN              reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    AND             reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    OR              reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    NOT_EQUAL       reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    LSQUAREPAREN    reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    DELIMITER       reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    RSQUAREPAREN    reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    RPAREN          reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)
    SEMI            reduce using rule 19 (expression -> LSQUAREPAREN expression_head RSQUAREPAREN .)


state 59

    (22) expression_tail -> DELIMITER . expression expression_tail
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    factor                         shift and go to state 9
    while_smt                      shift and go to state 23
    expression                     shift and go to state 85
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    smt                            shift and go to state 28
    block                          shift and go to state 18
    if_smt                         shift and go to state 22

state 60

    (17) expression -> expression expression_index .
    (8) smt -> expression expression_index . EQUALS expression SEMI

    PLUS            reduce using rule 17 (expression -> expression expression_index .)
    MINUS           reduce using rule 17 (expression -> expression expression_index .)
    TIMES           reduce using rule 17 (expression -> expression expression_index .)
    DIVIDE          reduce using rule 17 (expression -> expression expression_index .)
    FLOOR_DIVIDE    reduce using rule 17 (expression -> expression expression_index .)
    MODULUS         reduce using rule 17 (expression -> expression expression_index .)
    POWER           reduce using rule 17 (expression -> expression expression_index .)
    LESS_THAN       reduce using rule 17 (expression -> expression expression_index .)
    LESS_EQUAL      reduce using rule 17 (expression -> expression expression_index .)
    GREATER_THAN    reduce using rule 17 (expression -> expression expression_index .)
    GREATER_EQUAL   reduce using rule 17 (expression -> expression expression_index .)
    DOUBLE_EQUALS   reduce using rule 17 (expression -> expression expression_index .)
    IN              reduce using rule 17 (expression -> expression expression_index .)
    AND             reduce using rule 17 (expression -> expression expression_index .)
    OR              reduce using rule 17 (expression -> expression expression_index .)
    NOT_EQUAL       reduce using rule 17 (expression -> expression expression_index .)
    LSQUAREPAREN    reduce using rule 17 (expression -> expression expression_index .)
    DELIMITER       reduce using rule 17 (expression -> expression expression_index .)
    RSQUAREPAREN    reduce using rule 17 (expression -> expression expression_index .)
    RPAREN          reduce using rule 17 (expression -> expression expression_index .)
    SEMI            reduce using rule 17 (expression -> expression expression_index .)
    EQUALS          shift and go to state 76


state 61

    (21) expression_head -> expression expression_tail .

    RSQUAREPAREN    reduce using rule 21 (expression_head -> expression expression_tail .)


state 62

    (7) smt -> NAME EQUALS expression . SEMI
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    SEMI            shift and go to state 86
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    AND             shift and go to state 54
    OR              shift and go to state 41
    NOT_EQUAL       shift and go to state 55
    LSQUAREPAREN    shift and go to state 38

    expression_index               shift and go to state 60

state 63

    (14) if_smt -> IF LPAREN expression . RPAREN block
    (15) if_else_smt -> IF LPAREN expression . RPAREN block ELSE block
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    RPAREN          shift and go to state 87
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    AND             shift and go to state 54
    OR              shift and go to state 41
    NOT_EQUAL       shift and go to state 55
    LSQUAREPAREN    shift and go to state 38

    expression_index               shift and go to state 60

state 64

    (47) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    FLOOR_DIVIDE    reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    LESS_EQUAL      reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    GREATER_EQUAL   reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    DOUBLE_EQUALS   reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    LSQUAREPAREN    reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    DELIMITER       reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    RSQUAREPAREN    reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 47 (expression -> LPAREN expression RPAREN .)


state 65

    (13) print_smt -> PRINT LPAREN expression . RPAREN SEMI
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    RPAREN          shift and go to state 88
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    AND             shift and go to state 54
    OR              shift and go to state 41
    NOT_EQUAL       shift and go to state 55
    LSQUAREPAREN    shift and go to state 38

    expression_index               shift and go to state 60

state 66

    (16) while_smt -> WHILE LPAREN expression . RPAREN block
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    RPAREN          shift and go to state 89
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    AND             shift and go to state 54
    OR              shift and go to state 41
    NOT_EQUAL       shift and go to state 55
    LSQUAREPAREN    shift and go to state 38

    expression_index               shift and go to state 60

state 67

    (18) expression_index -> LSQUAREPAREN expression . RSQUAREPAREN
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    RSQUAREPAREN    shift and go to state 90
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    AND             shift and go to state 54
    OR              shift and go to state 41
    NOT_EQUAL       shift and go to state 55
    LSQUAREPAREN    shift and go to state 38

    expression_index               shift and go to state 60

state 68

    (27) expression -> expression MINUS expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    PLUS            reduce using rule 27 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 27 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 27 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 27 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 27 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 27 (expression -> expression MINUS expression .)
    DOUBLE_EQUALS   reduce using rule 27 (expression -> expression MINUS expression .)
    IN              reduce using rule 27 (expression -> expression MINUS expression .)
    AND             reduce using rule 27 (expression -> expression MINUS expression .)
    OR              reduce using rule 27 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 27 (expression -> expression MINUS expression .)
    DELIMITER       reduce using rule 27 (expression -> expression MINUS expression .)
    RSQUAREPAREN    reduce using rule 27 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 27 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 27 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LSQUAREPAREN    shift and go to state 38

  ! TIMES           [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 39 ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! IN              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 69

    (36) expression -> expression GREATER_EQUAL expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    LESS_THAN       reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    GREATER_THAN    reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    DOUBLE_EQUALS   reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    OR              reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    DELIMITER       reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    RSQUAREPAREN    reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    RPAREN          reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    SEMI            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    IN              shift and go to state 44
    LSQUAREPAREN    shift and go to state 38

  ! PLUS            [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! MODULUS         [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! POWER           [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! IN              [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 70

    (40) expression -> expression OR expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    OR              reduce using rule 40 (expression -> expression OR expression .)
    DELIMITER       reduce using rule 40 (expression -> expression OR expression .)
    RSQUAREPAREN    reduce using rule 40 (expression -> expression OR expression .)
    RPAREN          reduce using rule 40 (expression -> expression OR expression .)
    SEMI            reduce using rule 40 (expression -> expression OR expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    AND             shift and go to state 54
    NOT_EQUAL       shift and go to state 55
    LSQUAREPAREN    shift and go to state 38

  ! PLUS            [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! POWER           [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! LESS_THAN       [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! LESS_EQUAL      [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! GREATER_THAN    [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! IN              [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 41 ]

    expression_index               shift and go to state 60

state 71

    (35) expression -> expression GREATER_THAN expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    LESS_THAN       reduce using rule 35 (expression -> expression GREATER_THAN expression .)
    LESS_EQUAL      reduce using rule 35 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN    reduce using rule 35 (expression -> expression GREATER_THAN expression .)
    GREATER_EQUAL   reduce using rule 35 (expression -> expression GREATER_THAN expression .)
    DOUBLE_EQUALS   reduce using rule 35 (expression -> expression GREATER_THAN expression .)
    AND             reduce using rule 35 (expression -> expression GREATER_THAN expression .)
    OR              reduce using rule 35 (expression -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 35 (expression -> expression GREATER_THAN expression .)
    DELIMITER       reduce using rule 35 (expression -> expression GREATER_THAN expression .)
    RSQUAREPAREN    reduce using rule 35 (expression -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 35 (expression -> expression GREATER_THAN expression .)
    SEMI            reduce using rule 35 (expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    IN              shift and go to state 44
    LSQUAREPAREN    shift and go to state 38

  ! PLUS            [ reduce using rule 35 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression GREATER_THAN expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression GREATER_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression GREATER_THAN expression .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 35 (expression -> expression GREATER_THAN expression .) ]
  ! MODULUS         [ reduce using rule 35 (expression -> expression GREATER_THAN expression .) ]
  ! POWER           [ reduce using rule 35 (expression -> expression GREATER_THAN expression .) ]
  ! IN              [ reduce using rule 35 (expression -> expression GREATER_THAN expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 35 (expression -> expression GREATER_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 72

    (37) expression -> expression DOUBLE_EQUALS expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    LESS_THAN       reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .)
    LESS_EQUAL      reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .)
    GREATER_THAN    reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .)
    GREATER_EQUAL   reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .)
    DOUBLE_EQUALS   reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .)
    AND             reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .)
    OR              reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .)
    NOT_EQUAL       reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .)
    DELIMITER       reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .)
    RSQUAREPAREN    reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .)
    RPAREN          reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .)
    SEMI            reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    IN              shift and go to state 44
    LSQUAREPAREN    shift and go to state 38

  ! PLUS            [ reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! MODULUS         [ reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! POWER           [ reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! IN              [ reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 37 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 73

    (38) expression -> expression IN expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    LESS_THAN       reduce using rule 38 (expression -> expression IN expression .)
    LESS_EQUAL      reduce using rule 38 (expression -> expression IN expression .)
    GREATER_THAN    reduce using rule 38 (expression -> expression IN expression .)
    GREATER_EQUAL   reduce using rule 38 (expression -> expression IN expression .)
    DOUBLE_EQUALS   reduce using rule 38 (expression -> expression IN expression .)
    IN              reduce using rule 38 (expression -> expression IN expression .)
    AND             reduce using rule 38 (expression -> expression IN expression .)
    OR              reduce using rule 38 (expression -> expression IN expression .)
    NOT_EQUAL       reduce using rule 38 (expression -> expression IN expression .)
    DELIMITER       reduce using rule 38 (expression -> expression IN expression .)
    RSQUAREPAREN    reduce using rule 38 (expression -> expression IN expression .)
    RPAREN          reduce using rule 38 (expression -> expression IN expression .)
    SEMI            reduce using rule 38 (expression -> expression IN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LSQUAREPAREN    shift and go to state 38

  ! PLUS            [ reduce using rule 38 (expression -> expression IN expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression IN expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression IN expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression IN expression .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 38 (expression -> expression IN expression .) ]
  ! MODULUS         [ reduce using rule 38 (expression -> expression IN expression .) ]
  ! POWER           [ reduce using rule 38 (expression -> expression IN expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 38 (expression -> expression IN expression .) ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! IN              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 74

    (28) expression -> expression TIMES expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    PLUS            reduce using rule 28 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 28 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 28 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 28 (expression -> expression TIMES expression .)
    FLOOR_DIVIDE    reduce using rule 28 (expression -> expression TIMES expression .)
    MODULUS         reduce using rule 28 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 28 (expression -> expression TIMES expression .)
    LESS_EQUAL      reduce using rule 28 (expression -> expression TIMES expression .)
    GREATER_THAN    reduce using rule 28 (expression -> expression TIMES expression .)
    GREATER_EQUAL   reduce using rule 28 (expression -> expression TIMES expression .)
    DOUBLE_EQUALS   reduce using rule 28 (expression -> expression TIMES expression .)
    IN              reduce using rule 28 (expression -> expression TIMES expression .)
    AND             reduce using rule 28 (expression -> expression TIMES expression .)
    OR              reduce using rule 28 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 28 (expression -> expression TIMES expression .)
    DELIMITER       reduce using rule 28 (expression -> expression TIMES expression .)
    RSQUAREPAREN    reduce using rule 28 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 28 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 28 (expression -> expression TIMES expression .)
    POWER           shift and go to state 53
    LSQUAREPAREN    shift and go to state 38

  ! POWER           [ reduce using rule 28 (expression -> expression TIMES expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 28 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! FLOOR_DIVIDE    [ shift and go to state 51 ]
  ! MODULUS         [ shift and go to state 52 ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! IN              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 75

    (34) expression -> expression LESS_EQUAL expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    LESS_THAN       reduce using rule 34 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 34 (expression -> expression LESS_EQUAL expression .)
    GREATER_THAN    reduce using rule 34 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 34 (expression -> expression LESS_EQUAL expression .)
    DOUBLE_EQUALS   reduce using rule 34 (expression -> expression LESS_EQUAL expression .)
    AND             reduce using rule 34 (expression -> expression LESS_EQUAL expression .)
    OR              reduce using rule 34 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 34 (expression -> expression LESS_EQUAL expression .)
    DELIMITER       reduce using rule 34 (expression -> expression LESS_EQUAL expression .)
    RSQUAREPAREN    reduce using rule 34 (expression -> expression LESS_EQUAL expression .)
    RPAREN          reduce using rule 34 (expression -> expression LESS_EQUAL expression .)
    SEMI            reduce using rule 34 (expression -> expression LESS_EQUAL expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    IN              shift and go to state 44
    LSQUAREPAREN    shift and go to state 38

  ! PLUS            [ reduce using rule 34 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression LESS_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression LESS_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression LESS_EQUAL expression .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 34 (expression -> expression LESS_EQUAL expression .) ]
  ! MODULUS         [ reduce using rule 34 (expression -> expression LESS_EQUAL expression .) ]
  ! POWER           [ reduce using rule 34 (expression -> expression LESS_EQUAL expression .) ]
  ! IN              [ reduce using rule 34 (expression -> expression LESS_EQUAL expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 34 (expression -> expression LESS_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 76

    (8) smt -> expression expression_index EQUALS . expression SEMI
    (17) expression -> . expression expression_index
    (19) expression -> . LSQUAREPAREN expression_head RSQUAREPAREN
    (25) expression -> . MINUS expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression FLOOR_DIVIDE expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression POWER expression
    (33) expression -> . expression LESS_THAN expression
    (34) expression -> . expression LESS_EQUAL expression
    (35) expression -> . expression GREATER_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression DOUBLE_EQUALS expression
    (38) expression -> . expression IN expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . NOT expression
    (43) expression -> . factor
    (45) expression -> . STRING
    (46) expression -> . smt
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . NAME
    (49) expression -> . TRUE
    (50) expression -> . FALSE
    (44) factor -> . NUMBER
    (4) smt -> . block
    (5) smt -> . LBRACE RBRACE
    (7) smt -> . NAME EQUALS expression SEMI
    (8) smt -> . expression expression_index EQUALS expression SEMI
    (9) smt -> . print_smt
    (10) smt -> . if_smt
    (11) smt -> . while_smt
    (12) smt -> . if_else_smt
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE
    (13) print_smt -> . PRINT LPAREN expression RPAREN SEMI
    (14) if_smt -> . IF LPAREN expression RPAREN block
    (16) while_smt -> . WHILE LPAREN expression RPAREN block
    (15) if_else_smt -> . IF LPAREN expression RPAREN block ELSE block

    LSQUAREPAREN    shift and go to state 3
    MINUS           shift and go to state 6
    NOT             shift and go to state 25
    STRING          shift and go to state 8
    LPAREN          shift and go to state 11
    NAME            shift and go to state 26
    TRUE            shift and go to state 24
    FALSE           shift and go to state 7
    NUMBER          shift and go to state 21
    LBRACE          shift and go to state 12
    PRINT           shift and go to state 14
    IF              shift and go to state 10
    WHILE           shift and go to state 16

    while_smt                      shift and go to state 23
    factor                         shift and go to state 9
    smt                            shift and go to state 28
    expression                     shift and go to state 91
    block                          shift and go to state 18
    print_smt                      shift and go to state 5
    if_else_smt                    shift and go to state 20
    if_smt                         shift and go to state 22

state 77

    (29) expression -> expression DIVIDE expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    PLUS            reduce using rule 29 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 29 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 29 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 29 (expression -> expression DIVIDE expression .)
    FLOOR_DIVIDE    reduce using rule 29 (expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 29 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 29 (expression -> expression DIVIDE expression .)
    LESS_EQUAL      reduce using rule 29 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 29 (expression -> expression DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 29 (expression -> expression DIVIDE expression .)
    DOUBLE_EQUALS   reduce using rule 29 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 29 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 29 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 29 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 29 (expression -> expression DIVIDE expression .)
    DELIMITER       reduce using rule 29 (expression -> expression DIVIDE expression .)
    RSQUAREPAREN    reduce using rule 29 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 29 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 29 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 53
    LSQUAREPAREN    shift and go to state 38

  ! POWER           [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! FLOOR_DIVIDE    [ shift and go to state 51 ]
  ! MODULUS         [ shift and go to state 52 ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! IN              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 78

    (26) expression -> expression PLUS expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    PLUS            reduce using rule 26 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 26 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 26 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 26 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 26 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 26 (expression -> expression PLUS expression .)
    DOUBLE_EQUALS   reduce using rule 26 (expression -> expression PLUS expression .)
    IN              reduce using rule 26 (expression -> expression PLUS expression .)
    AND             reduce using rule 26 (expression -> expression PLUS expression .)
    OR              reduce using rule 26 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 26 (expression -> expression PLUS expression .)
    DELIMITER       reduce using rule 26 (expression -> expression PLUS expression .)
    RSQUAREPAREN    reduce using rule 26 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 26 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 26 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LSQUAREPAREN    shift and go to state 38

  ! TIMES           [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 39 ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! IN              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 79

    (33) expression -> expression LESS_THAN expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    LESS_THAN       reduce using rule 33 (expression -> expression LESS_THAN expression .)
    LESS_EQUAL      reduce using rule 33 (expression -> expression LESS_THAN expression .)
    GREATER_THAN    reduce using rule 33 (expression -> expression LESS_THAN expression .)
    GREATER_EQUAL   reduce using rule 33 (expression -> expression LESS_THAN expression .)
    DOUBLE_EQUALS   reduce using rule 33 (expression -> expression LESS_THAN expression .)
    AND             reduce using rule 33 (expression -> expression LESS_THAN expression .)
    OR              reduce using rule 33 (expression -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 33 (expression -> expression LESS_THAN expression .)
    DELIMITER       reduce using rule 33 (expression -> expression LESS_THAN expression .)
    RSQUAREPAREN    reduce using rule 33 (expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 33 (expression -> expression LESS_THAN expression .)
    SEMI            reduce using rule 33 (expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    IN              shift and go to state 44
    LSQUAREPAREN    shift and go to state 38

  ! PLUS            [ reduce using rule 33 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression LESS_THAN expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression LESS_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression LESS_THAN expression .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 33 (expression -> expression LESS_THAN expression .) ]
  ! MODULUS         [ reduce using rule 33 (expression -> expression LESS_THAN expression .) ]
  ! POWER           [ reduce using rule 33 (expression -> expression LESS_THAN expression .) ]
  ! IN              [ reduce using rule 33 (expression -> expression LESS_THAN expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 33 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 80

    (30) expression -> expression FLOOR_DIVIDE expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    PLUS            reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    MINUS           reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    FLOOR_DIVIDE    reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    LESS_THAN       reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    LESS_EQUAL      reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    GREATER_THAN    reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    DOUBLE_EQUALS   reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    IN              reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    AND             reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    OR              reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    NOT_EQUAL       reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    DELIMITER       reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    RSQUAREPAREN    reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    RPAREN          reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    SEMI            reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LSQUAREPAREN    shift and go to state 38

  ! TIMES           [ reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .) ]
  ! MODULUS         [ reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .) ]
  ! POWER           [ reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 30 (expression -> expression FLOOR_DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 39 ]
  ! FLOOR_DIVIDE    [ shift and go to state 51 ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! IN              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 81

    (31) expression -> expression MODULUS expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    PLUS            reduce using rule 31 (expression -> expression MODULUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MODULUS expression .)
    FLOOR_DIVIDE    reduce using rule 31 (expression -> expression MODULUS expression .)
    MODULUS         reduce using rule 31 (expression -> expression MODULUS expression .)
    LESS_THAN       reduce using rule 31 (expression -> expression MODULUS expression .)
    LESS_EQUAL      reduce using rule 31 (expression -> expression MODULUS expression .)
    GREATER_THAN    reduce using rule 31 (expression -> expression MODULUS expression .)
    GREATER_EQUAL   reduce using rule 31 (expression -> expression MODULUS expression .)
    DOUBLE_EQUALS   reduce using rule 31 (expression -> expression MODULUS expression .)
    IN              reduce using rule 31 (expression -> expression MODULUS expression .)
    AND             reduce using rule 31 (expression -> expression MODULUS expression .)
    OR              reduce using rule 31 (expression -> expression MODULUS expression .)
    NOT_EQUAL       reduce using rule 31 (expression -> expression MODULUS expression .)
    DELIMITER       reduce using rule 31 (expression -> expression MODULUS expression .)
    RSQUAREPAREN    reduce using rule 31 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 31 (expression -> expression MODULUS expression .)
    SEMI            reduce using rule 31 (expression -> expression MODULUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    POWER           shift and go to state 53
    LSQUAREPAREN    shift and go to state 38

  ! TIMES           [ reduce using rule 31 (expression -> expression MODULUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression MODULUS expression .) ]
  ! POWER           [ reduce using rule 31 (expression -> expression MODULUS expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 31 (expression -> expression MODULUS expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 39 ]
  ! FLOOR_DIVIDE    [ shift and go to state 51 ]
  ! MODULUS         [ shift and go to state 52 ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! IN              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 82

    (32) expression -> expression POWER expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    PLUS            reduce using rule 32 (expression -> expression POWER expression .)
    MINUS           reduce using rule 32 (expression -> expression POWER expression .)
    TIMES           reduce using rule 32 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 32 (expression -> expression POWER expression .)
    FLOOR_DIVIDE    reduce using rule 32 (expression -> expression POWER expression .)
    MODULUS         reduce using rule 32 (expression -> expression POWER expression .)
    LESS_THAN       reduce using rule 32 (expression -> expression POWER expression .)
    LESS_EQUAL      reduce using rule 32 (expression -> expression POWER expression .)
    GREATER_THAN    reduce using rule 32 (expression -> expression POWER expression .)
    GREATER_EQUAL   reduce using rule 32 (expression -> expression POWER expression .)
    DOUBLE_EQUALS   reduce using rule 32 (expression -> expression POWER expression .)
    IN              reduce using rule 32 (expression -> expression POWER expression .)
    AND             reduce using rule 32 (expression -> expression POWER expression .)
    OR              reduce using rule 32 (expression -> expression POWER expression .)
    NOT_EQUAL       reduce using rule 32 (expression -> expression POWER expression .)
    DELIMITER       reduce using rule 32 (expression -> expression POWER expression .)
    RSQUAREPAREN    reduce using rule 32 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 32 (expression -> expression POWER expression .)
    SEMI            reduce using rule 32 (expression -> expression POWER expression .)
    POWER           shift and go to state 53
    LSQUAREPAREN    shift and go to state 38

  ! POWER           [ reduce using rule 32 (expression -> expression POWER expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 32 (expression -> expression POWER expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! FLOOR_DIVIDE    [ shift and go to state 51 ]
  ! MODULUS         [ shift and go to state 52 ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! IN              [ shift and go to state 44 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 83

    (39) expression -> expression AND expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    AND             reduce using rule 39 (expression -> expression AND expression .)
    OR              reduce using rule 39 (expression -> expression AND expression .)
    DELIMITER       reduce using rule 39 (expression -> expression AND expression .)
    RSQUAREPAREN    reduce using rule 39 (expression -> expression AND expression .)
    RPAREN          reduce using rule 39 (expression -> expression AND expression .)
    SEMI            reduce using rule 39 (expression -> expression AND expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    NOT_EQUAL       shift and go to state 55
    LSQUAREPAREN    shift and go to state 38

  ! PLUS            [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! POWER           [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! LESS_THAN       [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! LESS_EQUAL      [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! GREATER_THAN    [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! IN              [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]

    expression_index               shift and go to state 60

state 84

    (41) expression -> expression NOT_EQUAL expression .
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    LESS_THAN       reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN    reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    DOUBLE_EQUALS   reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    AND             reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    OR              reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    DELIMITER       reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    RSQUAREPAREN    reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    SEMI            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    IN              shift and go to state 44
    LSQUAREPAREN    shift and go to state 38

  ! PLUS            [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! FLOOR_DIVIDE    [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! MODULUS         [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! POWER           [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! IN              [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! LSQUAREPAREN    [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 50 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_THAN    [ shift and go to state 42 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! DOUBLE_EQUALS   [ shift and go to state 43 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 41 ]
  ! NOT_EQUAL       [ shift and go to state 55 ]

    expression_index               shift and go to state 60

state 85

    (22) expression_tail -> DELIMITER expression . expression_tail
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (22) expression_tail -> . DELIMITER expression expression_tail
    (23) expression_tail -> .
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    AND             shift and go to state 54
    OR              shift and go to state 41
    NOT_EQUAL       shift and go to state 55
    DELIMITER       shift and go to state 59
    RSQUAREPAREN    reduce using rule 23 (expression_tail -> .)
    LSQUAREPAREN    shift and go to state 38

    expression_tail                shift and go to state 92
    expression_index               shift and go to state 60

state 86

    (7) smt -> NAME EQUALS expression SEMI .

    PLUS            reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    MINUS           reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    TIMES           reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    DIVIDE          reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    FLOOR_DIVIDE    reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    MODULUS         reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    POWER           reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    LESS_THAN       reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    LESS_EQUAL      reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    GREATER_THAN    reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    GREATER_EQUAL   reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    DOUBLE_EQUALS   reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    IN              reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    AND             reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    OR              reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    NOT_EQUAL       reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    LSQUAREPAREN    reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    DELIMITER       reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    RSQUAREPAREN    reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    SEMI            reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    LBRACE          reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    NAME            reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    NOT             reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    STRING          reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    LPAREN          reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    TRUE            reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    FALSE           reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    PRINT           reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    IF              reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    WHILE           reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    NUMBER          reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)
    RBRACE          reduce using rule 7 (smt -> NAME EQUALS expression SEMI .)


state 87

    (14) if_smt -> IF LPAREN expression RPAREN . block
    (15) if_else_smt -> IF LPAREN expression RPAREN . block ELSE block
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 1

    block                          shift and go to state 93

state 88

    (13) print_smt -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 94


state 89

    (16) while_smt -> WHILE LPAREN expression RPAREN . block
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 1

    block                          shift and go to state 95

state 90

    (18) expression_index -> LSQUAREPAREN expression RSQUAREPAREN .

    EQUALS          reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    RPAREN          reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    PLUS            reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    MINUS           reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    TIMES           reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    DIVIDE          reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    FLOOR_DIVIDE    reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    MODULUS         reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    POWER           reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    LESS_THAN       reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    LESS_EQUAL      reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    GREATER_THAN    reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    GREATER_EQUAL   reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    DOUBLE_EQUALS   reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    IN              reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    AND             reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    OR              reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    NOT_EQUAL       reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    LSQUAREPAREN    reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    DELIMITER       reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    RSQUAREPAREN    reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)
    SEMI            reduce using rule 18 (expression_index -> LSQUAREPAREN expression RSQUAREPAREN .)


state 91

    (8) smt -> expression expression_index EQUALS expression . SEMI
    (17) expression -> expression . expression_index
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . FLOOR_DIVIDE expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . POWER expression
    (33) expression -> expression . LESS_THAN expression
    (34) expression -> expression . LESS_EQUAL expression
    (35) expression -> expression . GREATER_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . DOUBLE_EQUALS expression
    (38) expression -> expression . IN expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . NOT_EQUAL expression
    (8) smt -> expression . expression_index EQUALS expression SEMI
    (18) expression_index -> . LSQUAREPAREN expression RSQUAREPAREN

    SEMI            shift and go to state 96
    PLUS            shift and go to state 49
    MINUS           shift and go to state 39
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 48
    FLOOR_DIVIDE    shift and go to state 51
    MODULUS         shift and go to state 52
    POWER           shift and go to state 53
    LESS_THAN       shift and go to state 50
    LESS_EQUAL      shift and go to state 46
    GREATER_THAN    shift and go to state 42
    GREATER_EQUAL   shift and go to state 40
    DOUBLE_EQUALS   shift and go to state 43
    IN              shift and go to state 44
    AND             shift and go to state 54
    OR              shift and go to state 41
    NOT_EQUAL       shift and go to state 55
    LSQUAREPAREN    shift and go to state 38

    expression_index               shift and go to state 60

state 92

    (22) expression_tail -> DELIMITER expression expression_tail .

    RSQUAREPAREN    reduce using rule 22 (expression_tail -> DELIMITER expression expression_tail .)


state 93

    (14) if_smt -> IF LPAREN expression RPAREN block .
    (15) if_else_smt -> IF LPAREN expression RPAREN block . ELSE block

    PLUS            reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    MINUS           reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    TIMES           reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    DIVIDE          reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    FLOOR_DIVIDE    reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    MODULUS         reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    POWER           reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    LESS_THAN       reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    LESS_EQUAL      reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    GREATER_THAN    reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    GREATER_EQUAL   reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    DOUBLE_EQUALS   reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    IN              reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    AND             reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    OR              reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    NOT_EQUAL       reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    LSQUAREPAREN    reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    DELIMITER       reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    RSQUAREPAREN    reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    RPAREN          reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    SEMI            reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    LBRACE          reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    NAME            reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    NOT             reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    STRING          reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    TRUE            reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    FALSE           reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    PRINT           reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 14 (if_smt -> IF LPAREN expression RPAREN block .)
    ELSE            shift and go to state 97


state 94

    (13) print_smt -> PRINT LPAREN expression RPAREN SEMI .

    PLUS            reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    TIMES           reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    DIVIDE          reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    FLOOR_DIVIDE    reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    MODULUS         reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    POWER           reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    LESS_THAN       reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    LESS_EQUAL      reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    GREATER_THAN    reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    GREATER_EQUAL   reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    DOUBLE_EQUALS   reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    IN              reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    AND             reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    OR              reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    NOT_EQUAL       reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    LSQUAREPAREN    reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    DELIMITER       reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    RSQUAREPAREN    reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    RPAREN          reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    LBRACE          reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    NAME            reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    NOT             reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    NUMBER          reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 13 (print_smt -> PRINT LPAREN expression RPAREN SEMI .)


state 95

    (16) while_smt -> WHILE LPAREN expression RPAREN block .

    PLUS            reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    MINUS           reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    TIMES           reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    DIVIDE          reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    FLOOR_DIVIDE    reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    MODULUS         reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    POWER           reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    LESS_THAN       reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    LESS_EQUAL      reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    GREATER_THAN    reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    GREATER_EQUAL   reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    DOUBLE_EQUALS   reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    IN              reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    AND             reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    OR              reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    NOT_EQUAL       reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    LSQUAREPAREN    reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    DELIMITER       reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    RSQUAREPAREN    reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    RPAREN          reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    SEMI            reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    LBRACE          reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    NAME            reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    NOT             reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    STRING          reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    TRUE            reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    FALSE           reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    PRINT           reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 16 (while_smt -> WHILE LPAREN expression RPAREN block .)


state 96

    (8) smt -> expression expression_index EQUALS expression SEMI .

    PLUS            reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    MINUS           reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    TIMES           reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    DIVIDE          reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    FLOOR_DIVIDE    reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    MODULUS         reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    POWER           reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    LESS_THAN       reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    LESS_EQUAL      reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    GREATER_THAN    reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    GREATER_EQUAL   reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    DOUBLE_EQUALS   reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    IN              reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    AND             reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    OR              reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    NOT_EQUAL       reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    LSQUAREPAREN    reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    DELIMITER       reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    RSQUAREPAREN    reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    RPAREN          reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    SEMI            reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    LBRACE          reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    NAME            reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    NOT             reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    STRING          reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    LPAREN          reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    TRUE            reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    FALSE           reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    PRINT           reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    IF              reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    WHILE           reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    NUMBER          reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)
    RBRACE          reduce using rule 8 (smt -> expression expression_index EQUALS expression SEMI .)


state 97

    (15) if_else_smt -> IF LPAREN expression RPAREN block ELSE . block
    (1) block -> . LBRACE inblock RBRACE
    (6) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 1

    block                          shift and go to state 98

state 98

    (15) if_else_smt -> IF LPAREN expression RPAREN block ELSE block .

    PLUS            reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    MINUS           reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    TIMES           reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    DIVIDE          reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    FLOOR_DIVIDE    reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    MODULUS         reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    POWER           reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    LESS_THAN       reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    LESS_EQUAL      reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    GREATER_THAN    reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    GREATER_EQUAL   reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    DOUBLE_EQUALS   reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    IN              reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    AND             reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    OR              reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    NOT_EQUAL       reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    LSQUAREPAREN    reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    DELIMITER       reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    RSQUAREPAREN    reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    RPAREN          reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    SEMI            reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    LBRACE          reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    NAME            reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    NOT             reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    STRING          reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    LPAREN          reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    TRUE            reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    FALSE           reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    PRINT           reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    WHILE           reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    NUMBER          reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)
    RBRACE          reduce using rule 15 (if_else_smt -> IF LPAREN expression RPAREN block ELSE block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LSQUAREPAREN in state 15 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 15 resolved as shift
WARNING: reduce/reduce conflict in state 29 resolved using rule (expression_head -> expression)
WARNING: rejected rule (expression_tail -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 34 resolved using rule (smt -> LBRACE RBRACE)
WARNING: rejected rule (block -> LBRACE RBRACE) in state 34
